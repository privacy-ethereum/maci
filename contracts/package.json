{
  "name": "maci-contracts",
  "version": "2.0.0-alpha",
  "description": "Solidity Smart Contracts for MACI (Minimal Anti-Collusion Infrastructure)",
  "main": "build/ts/index.js",
  "exports": {
    ".": {
      "types": "./build/ts/index.d.ts",
      "default": "./build/ts/index.js"
    },
    "./typechain-types": {
      "types": "./build/typechain-types/index.d.ts",
      "default": "./build/typechain-types/index.js"
    }
  },
  "bin": {
    "maci-contracts": "./build/ts/index.js"
  },
  "files": [
    "build",
    "contracts",
    "README.md",
    "CHANGELOG.md"
  ],
  "scripts": {
    "watch": "tsc --watch",
    "hardhat": "hardhat node",
    "compileSol": "TS_NODE_TRANSPILE_ONLY=1 ts-node ./scripts/compileSol.ts",
    "moveIntegrationArtifacts": "cp -r artifacts/ ../integrationTests/artifacts",
    "prebuild": "pnpm run compileSol",
    "build": "tsc -p tsconfig.build.json",
    "postbuild": "cp -r ./artifacts ./build",
    "types": "tsc -p tsconfig.json --noEmit",
    "docs": "hardhat docgen",
    "test": "hardhat test --network hardhat",
    "test:maci": "pnpm run test ./tests/MACI.test.ts",
    "test:poll": "pnpm run test ./tests/Poll.test.ts",
    "test:messageProcessor": "pnpm run test ./tests/MessageProcessor.test.ts",
    "test:tally": "pnpm run test ./tests/Tally.test.ts",
    "test:tallyNonQv": "pnpm run test ./tests/TallyNonQv.test.ts",
    "test:hasher": "pnpm run test ./tests/Hasher.test.ts",
    "test:utilities": "pnpm run test ./tests/Utilities.test.ts",
    "test:signupGatekeeper": "pnpm run test ./tests/SignUpGatekeeper.test.ts",
    "test:verifier": "pnpm run test ./tests/Verifier.test.ts",
    "test:accQueue": "pnpm run test ./tests/AccQueue.test.ts",
    "test:accQueueBenchmark": "pnpm run test ./tests/AccQueueBenchmark.test.ts",
    "test:hasherBenchmarks": "pnpm run test ./tests/HasherBenchmarks.test.ts",
    "test:vkRegistry": "pnpm run test ./tests/VkRegistry.test.ts",
    "test:pollFactory": "pnpm run test ./tests/PollFactory.test.ts",
    "test:eas_gatekeeper": "pnpm run test ./tests/EASGatekeeper.test.ts",
    "test:hats_gatekeeper": "pnpm run test ./tests/HatsGatekeeper.test.ts",
    "test:gitcoin_gatekeeper": "pnpm run test ./tests/GitcoinPassportGatekeeper.test.ts",
    "test:zupass_gatekeeper": "pnpm run test ./tests/ZupassGatekeeper.test.ts",
    "test:semaphore_gatekeeper": "pnpm run test ./tests/SemaphoreGatekeeper.test.ts",
    "deploy": "hardhat deploy-full",
    "deploy-poll": "hardhat deploy-poll",
    "verify": "hardhat verify-full",
    "merge": "hardhat merge",
    "prove": "hardhat prove",
    "deploy:localhost": "pnpm run deploy",
    "deploy:sepolia": "pnpm run deploy --network sepolia",
    "deploy:optimism-sepolia": "pnpm run deploy --network optimism_sepolia",
    "deploy:optimism": "pnpm run deploy --network optimism",
    "deploy:scroll": "pnpm run deploy --network scroll",
    "deploy:scroll-sepolia": "pnpm run deploy --network scroll_sepolia",
    "deploy-poll:localhost": "pnpm run deploy-poll",
    "deploy-poll:sepolia": "pnpm run deploy-poll --network sepolia",
    "deploy-poll:optimism-sepolia": "pnpm run deploy-poll --network optimism_sepolia",
    "deploy-poll:optimism": "pnpm run deploy-poll --network optimism",
    "deploy-poll:scroll": "pnpm run deploy-poll --network scroll",
    "deploy-poll:scroll-sepolia": "pnpm run deploy-poll --network scroll_sepolia",
    "merge:localhost": "pnpm run merge",
    "merge:sepolia": "pnpm run merge --network sepolia",
    "merge:optimism-sepolia": "pnpm run merge --network optimism_sepolia",
    "merge:optimism": "pnpm run merge --network optimism",
    "merge:scroll": "pnpm run merge --network scroll",
    "merge:scroll-sepolia": "pnpm run merge --network scroll_sepolia",
    "prove:localhost": "pnpm run prove",
    "prove:sepolia": "pnpm run prove --network sepolia",
    "prove:optimism-sepolia": "pnpm run prove --network optimism_sepolia",
    "prove:optimism": "pnpm run prove --network optimism",
    "prove:scroll": "pnpm run prove --network scroll",
    "prove:scroll-sepolia": "pnpm run prove --network scroll_sepolia",
    "verify:sepolia": "pnpm run verify --network sepolia",
    "verify:optimism-sepolia": "pnpm run verify --network optimism_sepolia",
    "verify:optimism": "pnpm run verify --network optimism",
    "verify:scroll": "pnpm run verify --network scroll",
    "verify:scroll-sepolia": "pnpm run verify --network scroll_sepolia"
  },
  "dependencies": {
    "@nomicfoundation/hardhat-ethers": "^3.0.6",
    "@nomicfoundation/hardhat-toolbox": "^5.0.0",
    "@openzeppelin/contracts": "^5.0.2",
    "@zk-kit/imt.sol": "2.0.0-beta.12",
    "circomlibjs": "^0.1.7",
    "ethers": "^6.12.1",
    "hardhat": "^2.22.4",
    "lowdb": "^1.0.0",
    "maci-circuits": "2.0.0-alpha",
    "maci-core": "2.0.0-alpha",
    "maci-crypto": "2.0.0-alpha",
    "maci-domainobjs": "2.0.0-alpha",
    "solidity-docgen": "^0.6.0-beta.36",
    "uuid": "^10.0.0"
  },
  "devDependencies": {
    "@types/chai": "^4.3.11",
    "@types/circomlibjs": "^0.1.6",
    "@types/lowdb": "^1.0.15",
    "@types/mocha": "^10.0.6",
    "@types/node": "^20.12.12",
    "@types/snarkjs": "^0.7.8",
    "@types/uuid": "^9.0.2",
    "chai": "^4.3.10",
    "dotenv": "^16.4.5",
    "hardhat-artifactor": "^0.2.0",
    "hardhat-contract-sizer": "^2.10.0",
    "ts-node": "^10.9.1",
    "typescript": "^5.4.5"
  }
}
