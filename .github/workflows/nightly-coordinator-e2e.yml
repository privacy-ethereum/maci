name: Nightly Ceremony

on:
  workflow_dispatch:
  schedule:
    - cron: 0 0 * * *

env:
  NODE_OPTIONS: "--max-old-space-size=8192"
  TTL: ${{ vars.COORDINATOR_TTL }}
  LIMIT: ${{ vars.COORDINATOR_LIMIT }}
  COORDINATOR_PUBLIC_KEY_PATH: ${{ vars.COORDINATOR_PUBLIC_KEY_PATH }}
  COORDINATOR_PRIVATE_KEY_PATH: ${{ vars.COORDINATOR_PRIVATE_KEY_PATH }}
  COORDINATOR_MACI_PRIVATE_KEY: ${{ secrets.COORDINATOR_MACI_PRIVATE_KEY }}
  COORDINATOR_TALLY_ZKEY_NAME: ${{ vars.COORDINATOR_TALLY_ZKEY_NAME }}
  COORDINATOR_MESSAGE_PROCESS_ZKEY_NAME: ${{ vars.COORDINATOR_MESSAGE_PROCESS_ZKEY_NAME }}
  COORDINATOR_POLL_JOINING_ZKEY_NAME: ${{ vars.COORDINATOR_POLL_JOINING_ZKEY_NAME }}
  COORDINATOR_POLL_JOINED_ZKEY_NAME: ${{ vars.COORDINATOR_POLL_JOINED_ZKEY_NAME }}
  COORDINATOR_RAPIDSNARK_EXE: ${{ vars.COORDINATOR_RAPIDSNARK_EXE }}
  COORDINATOR_ZKEY_PATH: ${{ vars.COORDINATOR_ZKEY_PATH }}
  COORDINATOR_RPC_URL: ${{ secrets.COORDINATOR_RPC_URL }}
  COORDINATOR_ADDRESSES: ${{ vars.COORDINATOR_ADDRESSES }}
  COORDINATOR_ALLOWED_ORIGINS: ${{ vars.COORDINATOR_ALLOWED_ORIGINS }}
  COORDINATOR_REDIS_HOST: ${{ vars.COORDINATOR_REDIS_HOST }}
  COORDINATOR_REDIS_PORT: ${{ vars.COORDINATOR_REDIS_PORT }}
  COORDINATOR_PORT: ${{ vars.COORDINATOR_PORT }}
  SUBGRAPH_NAME: ${{ vars.COORDINATOR_SUBGRAPH_NAME }}
  SUBGRAPH_PROVIDER_URL: ${{ vars.COORDINATOR_SUBGRAPH_PROVIDER_URL }}
  SUBGRAPH_DEPLOY_KEY: ${{ secrets.COORDINATOR_SUBGRAPH_DEPLOY_KEY }}
  SUBGRAPH_FOLDER: ${{ vars.COORDINATOR_SUBGRAPH_FOLDER }}
  ZERODEV_BUNDLER_RPC_OP_SEPOLIA: ${{ secrets.COORDINATOR_ZERODEV_BUNDLER_RPC_OP_SEPOLIA }}
  PRIVATE_KEY: ${{ secrets.COORDINATOR_TEST_PRIVATE_KEY }}

jobs:
  build-and-test:
    runs-on: ubuntu-22.04

    services:
      redis:
        image: redis:8
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Get changed files
        id: get-changed-files
        uses: jitterbit/get-changed-files@v1
        with:
          format: "csv"

      - name: Check for changes in 'circuit' folder
        id: check_changes
        run: |
          CHANGED_FILES=${{ steps.get-changed-files.outputs.all }}
          if echo "$CHANGED_FILES" | grep -q "\.circom"; then
            echo "CHANGED=true" >> $GITHUB_ENV
            echo "Circuits have changes."
          else
            echo "CHANGED=false" >> $GITHUB_ENV
            echo "No changes on circuits."
          fi

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install --yes \
            build-essential \
            libgmp-dev \
            libsodium-dev \
            nasm \
            nlohmann-json3-dev

      - name: Install
        run: |
          pnpm install --frozen-lockfile --prefer-offline

      - name: Build
        run: |
          pnpm run build

      - name: Download rapidsnark (1c137)
        run: |
          mkdir -p ~/rapidsnark/build
          wget -qO ~/rapidsnark/build/prover https://maci-devops-zkeys.s3.ap-northeast-2.amazonaws.com/rapidsnark-linux-amd64-1c137
          chmod +x ~/rapidsnark/build/prover

      - name: Download circom Binary v2.1.6
        run: |
          wget -qO ${{ github.workspace }}/circom https://github.com/iden3/circom/releases/download/v2.1.6/circom-linux-amd64
          chmod +x ${{ github.workspace }}/circom
          sudo mv ${{ github.workspace }}/circom /bin/circom

      - name: Calculate circuits hash
        id: hash_circuits
        run: |
          CIRCUIT_HASH=$(find packages/circuits -type f -name '*.circom' -exec sha1sum {} \; | sort | sha1sum | cut -d ' ' -f1)
          echo "CIRCUIT_HASH=$CIRCUIT_HASH" >> $GITHUB_ENV
          echo "CIRCUIT_HASH=$CIRCUIT_HASH" >> $GITHUB_OUTPUT

      - name: Cache zkeys
        id: cache_zkeys
        uses: actions/cache@v4
        with:
          path: apps/coordinator/zkeys
          key: zkeys-${{ steps.hash_circuits.outputs.CIRCUIT_HASH }}
          restore-keys: |
            zkeys-

      - name: Compile Circuits And Generate zkeys
        if: ${{ env.CHANGED == 'true' && steps.cache_zkeys.outputs.cache-hit != 'true' }}
        run: |
          pnpm build:circuits-c -- --outPath ../../apps/coordinator/zkeys
          pnpm setup:zkeys -- --outPath ../../apps/coordinator/zkeys

      - name: Download zkeys
        if: ${{ env.CHANGED == 'false' }}
        run: |
          pnpm download-zkeys:test:coordinator

      - name: Generate RSA Keypair
        working-directory: apps/coordinator
        run: |
          pnpm run generate-keypair

      - name: Run E2E tests
        working-directory: apps/coordinator
        run: |
          pnpm run test:e2e
